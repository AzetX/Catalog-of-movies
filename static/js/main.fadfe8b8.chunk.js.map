{"version":3,"sources":["components/Navbar.tsx","redux/types.tsx","redux/action.tsx","components/FindFilmsForm.tsx","components/FilmsList.tsx","components/SortFilms.tsx","page/FilmsPage.tsx","page/InfoMoviePage.tsx","App.tsx","reportWebVitals.ts","redux/filmReducer.tsx","redux/rootReducer.tsx","redux/saga.tsx","index.tsx"],"names":["Navbar","className","src","width","height","id","REQUEST_FILMS","FETCH_FILMS","SORTING_FILMS_YEAR","SORTING_FILMS_TITLE_STRAIGHT","SORTING_FILMS_TITLE_REVERSE","REQUEST_FULL_INFO","FETCH_FILM_FULL","GET_MOVIES_WTH_FAILURE","GET_MOVIE_WTH_FAILURE","fetchFilms","type","parametrMovies","getParamsMovies","titleMovie","paramMovies","fullInfoMovie","FethDataButton","submitHandler","title","onClick","ButtonsForm","clickHandler","InputForm","changeHandler","submitHandleKeyPress","htmlFor","placeholder","onChange","value","onKeyPress","connect","store","films","fetchedFilms","dispatch","useDispatch","useState","setTitle","setParamMovies","event","a","key","preventDefault","target","paramReq","SortigMovies","sortingByYear","sortByTitleStraight","sortByTitleReverse","CounterMovies","count","length","mapDispatchToProps","sortByYear","movies","payload","incorrectData","incorrectRequestMovies","map","movie","index","Poster","alt","Title","slice","Year","Type","to","moveTitle","titleMove","FilmsPage","Fragment","paramFullMovieReducer","fetchedFullMovie","history","useHistory","push","App","component","path","exact","InfoMoviePage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialStateMovies","initialStateMovie","incorrectRequestMovie","rootReducer","combineReducers","state","action","Object","values","Search","item","arr","sort","b","localeCompare","sagaWatcher","sagaWorkerAllMovies","sagaWorkerFullMovie","takeEvery","call","put","fetchFullInfoMovie","fetch","response","json","saga","createSagaMiddleware","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","run","app","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fadfe8b8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Navbar: React.FC = () => {\r\n    return (\r\n    <nav>\r\n        <div className=\"nav-wrapper\">\r\n            <div className=\"brand-log\">\r\n                FILMS PROJECT\r\n                <img src=\"https://www.flaticon.com/svg/static/icons/svg/3773/3773702.svg\" width=\"40px\" height=\"35px\" id=\"logo\" />\r\n            </div>\r\n        </div>\r\n    </nav>\r\n)\r\n}\r\n\r\n","export const REQUEST_FILMS  = 'FILMS/REQUEST_FILMS'\r\nexport const FETCH_FILMS = 'FILMS/FETCH_FILMS'\r\n\r\n\r\nexport const SORTING_FILMS_YEAR = 'SORTING/YEAR'\r\nexport const SORTING_FILMS_TITLE_STRAIGHT = 'SORTING/STRAIGHT'\r\nexport const SORTING_FILMS_TITLE_REVERSE = 'SORTING/REVERSE'\r\n\r\n\r\nexport const REQUEST_FULL_INFO = 'FILM/REQUEST_MOVIE'\r\nexport const FETCH_FILM_FULL = 'FILM/FETCH_FILM_FULL'\r\n\r\n\r\n\r\nexport const GET_MOVIES_WTH_FAILURE = 'GET_MOVIES_WTH_FAILURE'\r\nexport const GET_MOVIE_WTH_FAILURE = 'GET_MOVIE_WTH_FAILURE'","import { REQUEST_FILMS, SORTING_FILMS_YEAR, REQUEST_FULL_INFO,  SORTING_FILMS_TITLE_REVERSE, SORTING_FILMS_TITLE_STRAIGHT } from './types'\r\n\r\n\r\n\r\nexport function fetchFilms(){\r\n    return {\r\n        type: REQUEST_FILMS \r\n    }\r\n    \r\n}\r\n\r\nexport const sortByYear = (movies) => ({\r\n    type: SORTING_FILMS_YEAR,\r\n    payload: movies\r\n})\r\n\r\nexport const sortByTitleStraight = (movies) => ({\r\n    type: SORTING_FILMS_TITLE_STRAIGHT,\r\n    payload: movies\r\n})\r\n\r\nexport const sortByTitleReverse = (movies) => ({\r\n    type: SORTING_FILMS_TITLE_REVERSE,\r\n    payload: movies\r\n})\r\n\r\n\r\n\r\n\r\nexport const getFullMovie = () => {\r\n    return {\r\n        type: REQUEST_FULL_INFO\r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, connect } from 'react-redux'\r\nimport { fetchFilms } from '../redux/action'\r\nimport { InputFilmsProps, ClickFilmsProps, FetchedButtonProp, FilmsCollection }  from '../interfaces'\r\n\r\n\r\nexport let parametrMovies;   //BEDA\r\n function getParamsMovies(titleMovie:string, paramMovies:string){\r\n    return {\r\n        titleMovie,\r\n        paramMovies\r\n    }\r\n}\r\n\r\n\r\nconst FethDataButton: React.FC<FetchedButtonProp> = ({ submitHandler }) => {\r\n\r\n    return (\r\n        <div className=\"form-button-find\">\r\n          <button id=\"button-find-films\" title=\"FIND\" type=\"submit\" onClick={ submitHandler }>FIND MOVIES</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst ButtonsForm: React.FC <ClickFilmsProps>= ( { clickHandler } ) => {\r\n    return (\r\n           <div className=\"form-buttons-categories\">\r\n               <button id=\"button-title-films\" title=\"TITLE\"  onClick={ () => clickHandler('s') }>BY TITLE</button> \r\n               <button id=\"button-director-films\" title=\"DIRECTOR\"  onClick={ () => clickHandler('i') }>BY IMDb</button>\r\n           </div>\r\n    )\r\n}\r\n\r\nconst InputForm: React.FC <InputFilmsProps> = ( { title, changeHandler, submitHandleKeyPress } ) => {\r\n\r\n    return (    \r\n        <div className=\"input-form\"> \r\n        <label htmlFor=\"title\"> FIND THE MOVIES </label>\r\n        <input type=\"text\" id=\"title\" placeholder=\"Enter the movie or director...\" title=\"FIND YOUR MOVIES\"  onChange={ changeHandler } value={ title } onKeyPress={ submitHandleKeyPress }/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n const FilmsForm: React.FC <FilmsCollection> = ( {  } ) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [title, setTitle] = useState<string>('')//for input\r\n    const [paramMovies, setParamMovies] = useState<string>('s') \r\n\r\n    const changeHandler = ({ target }: React.ChangeEvent<HTMLFormElement>) => { \r\n        setTitle(target.value)\r\n    }\r\n\r\n    const clickHandler = (paramReq: string) => { \r\n        setParamMovies(paramReq)\r\n    }\r\n\r\n \r\n    async function submitHandleKeyPress (event: React.KeyboardEvent<HTMLFormElement>) {\r\n        if(event.key===\"Enter\"){\r\n            const titleMovie = await title;\r\n            parametrMovies = await getParamsMovies(titleMovie, paramMovies);\r\n            await setTitle('')\r\n            return await dispatch(fetchFilms())\r\n        }\r\n    }\r\n\r\n\r\n    async function submitHandler ( event: React.ChangeEvent<HTMLFormElement> ) {\r\n        event.preventDefault();\r\n        const titleMovie = await title;\r\n        parametrMovies = await getParamsMovies(titleMovie, paramMovies);\r\n        await setTitle('')\r\n        return await dispatch(fetchFilms())\r\n    }\r\n    \r\n    return(\r\n     \r\n        <div className=\"search-form\">\r\n            <InputForm  title={ title } changeHandler={changeHandler} submitHandleKeyPress={submitHandleKeyPress}/>   \r\n            <ButtonsForm clickHandler={ clickHandler } submitHandler={submitHandler} />\r\n            <FethDataButton submitHandler={submitHandler} /> \r\n          \r\n        </div>\r\n     \r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = function(store) {\r\n    return {\r\n      films: store.films.fetchedFilms\r\n    };\r\n  }\r\n\r\n export default connect(mapStateToProps, null)(FilmsForm)\r\n","import { render } from '@testing-library/react'\r\nimport React, { Fragment } from 'react'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport { getFullMovie } from '../redux/action'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { MoviesInfo }  from '../interfaces'\r\n\r\n\r\n\r\nexport let fullInfoMovie;\r\nfunction getFullInfoMovie(titleMove: string){\r\n    return {\r\n        titleMove \r\n    }\r\n}\r\n\r\n export const FilmsList: React.FC<MoviesInfo> = ({ films, incorrectData }) => {\r\n    const dispatch = useDispatch()\r\n    \r\n    if(incorrectData===true){\r\n        return (<p className=\"none-movies\">ERROR &#128533;, TRY TO ENTER AGAIN </p>)\r\n    } \r\n    else if(!films.length) {\r\n        return (<p className=\"none-movies\"> Sorry, but movies none found &#128533; </p>)\r\n    }\r\n   \r\n    \r\n    function handleClick(event: React.MouseEvent<HTMLAnchorElement, MouseEvent>, moveTitle){\r\n        fullInfoMovie = getFullInfoMovie(moveTitle)\r\n        return fullInfoMovie\r\n    }\r\n\r\n    return (\r\n  \r\n        <div className=\"movies-content\">\r\n            {\r\n            films.map((movie, index) =>(\r\n            <div className='films-content' key={index}>\r\n                <div className=\"movie-img\"><img src={movie.Poster} alt=\"Poster\"/></div>\r\n                <div className=\"movie-title\"><b>Title:</b> <i>{(movie.Title.length <= 30)? movie.Title: `${movie.Title.slice(0, 30)}...` }</i> </div>   \r\n                <div className=\"movie-year\"><b>Year:</b> <i>{movie.Year}</i></div>   \r\n                <div className=\"movie-type\"><b>Type:</b> <i>{movie.Type}</i></div> \r\n                <NavLink to= \"/fullInfo\" id=\"full-info\" onClick={(event) => { handleClick(event, movie.Title); dispatch(getFullMovie())} }>Get more info</NavLink>\r\n            </div>\r\n            ))}\r\n        </div>\r\n  \r\n    )\r\n    \r\n}\r\n\r\n\r\nconst mapStateToProps = function(store) {\r\n    return {\r\n      films: store.films.fetchedFilms, \r\n      incorrectData: store.films.incorrectRequestMovies\r\n    };\r\n  }\r\n\r\n\r\n\r\n  export default connect(mapStateToProps, null)(FilmsList)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { sortByYear, sortByTitleStraight, sortByTitleReverse } from '../redux/action'\r\nimport { SortingFilms, Count, ParamSorting }  from '../interfaces'\r\n\r\n\r\nconst SortigMovies: React.FC<SortingFilms> = ( { sortingByYear, sortByTitleStraight, sortByTitleReverse, films } ) => {\r\n    \r\n    return (\r\n        <div className=\"sorting\">\r\n            <div> Sorting by: </div> \r\n            <div className=\"release-date\" onClick={() => sortingByYear(films)}> year </div>\r\n         \r\n                    <div className=\"sort-straight\" onClick={()=> sortByTitleStraight(films)}>a-z</div>\r\n                    <div className=\"sort-reverse\" onClick={()=> sortByTitleReverse(films)}>z-a</div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst CounterMovies: React.FC<Count> = ( { count } ) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"counter\"> Movies found: { count.length } </div>\r\n    )\r\n}\r\n\r\n\r\n const SortFilms: React.FC<ParamSorting> = ( { films, sortByYear, sortByTitleReverse, sortByTitleStraight } ) => {\r\n\r\n\r\n     return (\r\n\r\n        <div className=\"sort-movies\">\r\n            <CounterMovies count={films} />\r\n            <SortigMovies sortingByYear={sortByYear} films={films}  sortByTitleStraight={sortByTitleStraight} sortByTitleReverse={sortByTitleReverse}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = function(store) {\r\n    return {\r\n      films: store.films.fetchedFilms\r\n    };\r\n  }\r\n\r\n  const mapDispatchToProps = {\r\n        sortByYear: sortByYear,\r\n        sortByTitleStraight: sortByTitleStraight,\r\n        sortByTitleReverse: sortByTitleReverse\r\n  }\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SortFilms)","import React from 'react'\r\nimport FilmsForm   from '../components/FindFilmsForm'\r\nimport  SortFilms    from '../components/SortFilms'\r\nimport  FilmsList   from '../components/FilmsList'\r\n\r\n\r\nexport const FilmsPage: React.FC = () => {\r\n    return(\r\n        <React.Fragment>\r\n            <FilmsForm />\r\n            <SortFilms />\r\n            <FilmsList />\r\n        </React.Fragment >\r\n    )\r\n} ","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Movie }  from '../interfaces'\r\n\r\nconst InfoMoviePage: React.FC<Movie> = ( { movie }) => {\r\n    const history = useHistory()\r\n    return(\r\n         <div className='film-content' key={0}>\r\n            <div className=\"film-img\"><img src={movie[13]} alt=\"Poster\"/></div>\r\n            <div className=\"film-title\"><b>Movie:</b> <i>{movie[0]} </i> </div>   \r\n            <div className=\"film-year\"><b>Year:</b> <i>{movie[3]}</i></div>   \r\n            <div className=\"film-rait\"><b>Raiting:</b> <i>{movie[16]}</i></div> \r\n            <div className=\"film-descr\"><b>Descipton:</b> <br /> <i>{movie[9]}</i></div> \r\n    \r\n            <button className=\"btn-back\" onClick = {()=>{history.push('/Catalog-of-movies')}}>Обратно к списку</button>\r\n            \r\n        </div>\r\n    )\r\n} \r\n\r\n\r\nconst mapStateToProps = function(store){\r\n    return {\r\n        movie: store.paramFullMovieReducer.fetchedFullMovie\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, null)(InfoMoviePage)","import React from 'react';\r\nimport { Navbar } from './components/Navbar'\r\nimport { FilmsPage } from './page/FilmsPage'\r\nimport InfoMoviePage  from './page/InfoMoviePage'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\n\r\nconst App: React.FunctionComponent = () => {\r\n\r\n\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Navbar />\r\n      <div className=\"container\">\r\n        <Switch>\r\n           <Route component={FilmsPage} path=\"/Catalog-of-movies\" exact/>\r\n           <Route component={InfoMoviePage} path=\"/fullInfo\" />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  \r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import { FETCH_FILMS, SORTING_FILMS_YEAR, FETCH_FILM_FULL, GET_MOVIES_WTH_FAILURE, GET_MOVIE_WTH_FAILURE,  SORTING_FILMS_TITLE_STRAIGHT, SORTING_FILMS_TITLE_REVERSE } from './types'\r\nimport { State }  from '../interfaces'\r\n\r\n\r\nexport const initialStateMovies: State = {\r\n    fetchedFilms: [],\r\n    incorrectRequestMovies: null\r\n}\r\n\r\n\r\nexport const MoviesRequestReducer  = (state = initialStateMovies, action: any) => {\r\n    \r\n    switch (action.type) {\r\n        case FETCH_FILMS:   \r\n            return {...state, fetchedFilms: Object.values(action.payload.Search)};  \r\n\r\n        case SORTING_FILMS_YEAR: \r\n            return {...state, fetchedFilms: state.fetchedFilms.map((item, index, arr) => action.payload[index]).sort(function(a, b){\r\n            if (a.Year > b.Year) {\r\n                return 1;\r\n              }\r\n              if (a.Year < b.Year) {\r\n                return -1;\r\n              }\r\n              return 0;\r\n        })};\r\n\r\n        case  SORTING_FILMS_TITLE_STRAIGHT:\r\n            return {...state, fetchedFilms: state.fetchedFilms.map((item, index, arr) => action.payload[index]).sort((a, b) => a.Title.localeCompare(b.Title))}\r\n\r\n        case SORTING_FILMS_TITLE_REVERSE:\r\n            return {...state, fetchedFilms: state.fetchedFilms.map((item, index, arr) => action.payload[index]).sort((a, b) => b.Title.localeCompare(a.Title))}\r\n        \r\n        case GET_MOVIES_WTH_FAILURE:\r\n            return {...state, incorrectRequestMovies: state.incorrectRequestMovies = action.payload}; \r\n     \r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\nconst initialStateMovie = {\r\n    fetchedFullMovie: [],\r\n    incorrectRequestMovie:'' \r\n}\r\n\r\nexport const paramFullMovieReducer = (state = initialStateMovie, action: any) => {\r\n    switch(action.type){\r\n    case FETCH_FILM_FULL: \r\n        return {...state, fetchedFullMovie: Object.values(action.payload)};\r\n    case GET_MOVIE_WTH_FAILURE:\r\n        return {...state, incorrectRequestMovie: 'Не, ну камон, введите корректо'};\r\n    default: return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { MoviesRequestReducer, paramFullMovieReducer } from './filmReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n    films: MoviesRequestReducer,\r\n    paramFullMovieReducer: paramFullMovieReducer\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","import { takeEvery, put, call } from 'redux-saga/effects'\r\nimport { FETCH_FILMS, REQUEST_FILMS, REQUEST_FULL_INFO, FETCH_FILM_FULL, GET_MOVIE_WTH_FAILURE, GET_MOVIES_WTH_FAILURE } from './types'\r\nimport { parametrMovies }  from '../components/FindFilmsForm'\r\nimport { fullInfoMovie } from '../components/FilmsList'\r\nimport { expectSaga } from 'redux-saga-test-plan';\r\n\r\nexport function* sagaWatcher() {\r\n   yield takeEvery(REQUEST_FILMS, sagaWorkerAllMovies)\r\n   yield takeEvery(REQUEST_FULL_INFO, sagaWorkerFullMovie)\r\n}\r\n\r\nexport function* sagaWorkerAllMovies() {\r\n    try {\r\n    const payload =  yield call(fetchFilms)\r\n    yield put({ type: FETCH_FILMS, payload})\r\n    yield put({type: GET_MOVIES_WTH_FAILURE, payload: false})\r\n    }\r\n    catch(e){\r\n        yield put({type: GET_MOVIES_WTH_FAILURE, payload: true})\r\n    }\r\n}\r\n\r\nexport function* sagaWorkerFullMovie() {\r\n    try {\r\n        const payload =  yield call(fetchFullInfoMovie)\r\n        yield put({ type: FETCH_FILM_FULL, payload})\r\n    }\r\n    catch(e){\r\n        yield put({type: GET_MOVIE_WTH_FAILURE, payload: 'Error'})\r\n    }\r\n}\r\n\r\n\r\nexport async function fetchFilms() {\r\n    // const response = await fetch(`http://www.omdbapi.com/?${newFilmsequest.paramMovies}=${newFilmsequest.titleMovie}&plot=full&apikey=27834fd8`)\r\n    const response = await fetch(`https://cors-anywhere.herokuapp.com/http://www.omdbapi.com/?${parametrMovies.paramMovies}=${parametrMovies.titleMovie}&plot=full&apikey=27834fd8`)\r\n    const json =  await response.json()\r\n    return json    \r\n}\r\n\r\nexport async function fetchFullInfoMovie() {\r\n    const response = await fetch(`https://cors-anywhere.herokuapp.com/http://www.omdbapi.com/?t=${fullInfoMovie.titleMove}&plot=full&apikey=27834fd8`)\r\n    const json = await response.json()\r\n    return json\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { compose, createStore, applyMiddleware } from 'redux';\r\nimport { rootReducer } from './redux/rootReducer';\r\nimport { Provider } from 'react-redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { sagaWatcher } from './redux/saga';\r\nimport { fetchFilms, sortByYear } from './redux/action';\r\n\r\n\r\n\r\nconst saga = createSagaMiddleware()\r\n\r\nconst store =  createStore(rootReducer, compose(\r\n  applyMiddleware(saga), \r\n  (window&& (window as any).__REDUX_DEVTOOLS_EXTENSION__) && (window&& (window as any).__REDUX_DEVTOOLS_EXTENSION__())\r\n))\r\n\r\n\r\nsaga.run(sagaWatcher as any)\r\n\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n    <App />\r\n    </React.StrictMode>\r\n  </Provider>\r\n)\r\n\r\n\r\nReactDOM.render(\r\n  app,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}